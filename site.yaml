- name: Install and configure HAProxy
  hosts: HAproxy
  become: yes
  vars:
    haproxy_pkg: haproxy
    haproxy_cfg_src: haproxy.cfg.j2
  tasks:
    - name: Install HAProxy package
      package:
        name: "{{ haproxy_pkg }}"
        state: present

    - name: Copy HAProxy configuration file
      template:
        src: "{{ haproxy_cfg_src }}"
        dest: /etc/haproxy/haproxy.cfg

    - name: "Start HAproxy"
      service:
              name: "{{ haproxy_pkg }}"
              state: started

- name: Install and configure Flask web server
  hosts: webservers
  become: true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Python3, pip3, and venv
      apt:
        name:
          - python3
          - python3-pip
          - python3-venv
        state: present

    - name: Create Flask app directory
      file:
        path: /home/ubuntu/flask-app
        state: directory

    - name: Change directory to Flask app directory
      shell: cd /home/ubuntu/flask-app

    - name: Create virtual environment directory
      shell: python3 -m venv /home/ubuntu/flask-app/venv

    - name: Set up virtual environment
      shell: python3 -m venv /home/ubuntu/flask-app/venv

    - name: Install Flask
      shell: pip3 install Flask

    - name: Copy Flask app file
      copy:
        src: app.py
        dest: /home/ubuntu/flask-app/venv/app.py

    - name: Start Flask app
      copy:
        dest: /etc/systemd/system/flask-app.service
        content: |
          [Unit]
          Description=Flask App Service

          [Service]
          User=ubuntu
          Environment=FLASK_APP=/home/ubuntu/flask-app/venv/app.py
          Environment=FLASK_ENV=development
          Environment=FLASK_RUN_HOST={{ ansible_default_ipv4.address }}
          Environment=FLASK_RUN_PORT=5000
          WorkingDirectory=/home/ubuntu/flask-app/venv
          ExecStart=/home/ubuntu/flask-app/venv/bin/flask run
          Restart=always

          [Install]
          WantedBy=multi-user.target
    - name: Reload systemd configuration
      systemd:
        daemon_reexec: yes
      become: true
    - name: Start Flask app service
      systemd:
         name: flask-app
         state: started
         enabled: yes
    - name: restart flask-app
      shell: systemctl restart flask-app

    - name: Restart Flask app service
      service:
         name: flask-app
         state: restarted

- hosts: HAproxy
  become: true
  tasks:
    - name: "starting haproxy services"
      service:
              name: "haproxy"
              state: started
